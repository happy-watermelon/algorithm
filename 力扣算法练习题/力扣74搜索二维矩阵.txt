二分法和矩阵指针遍历法

解题思路
两种方法都是0ms
方法一:可以从矩阵左下角开始搜索,这个感觉比二分要好

方法二:判断每行的最后一个元素,如果比target小,那就进入下一行
二分来找最终元素即可

代码

左下角遍历法
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
            int count=0;
            for(int i=0,j=matrix[0].length-1;i<matrix.length&&j>=0;){
                if(target<matrix[i][j])
                    j--;
                    else if(target>matrix[i][j])
                    i++;
                    else
                    return true;
            }
            return false;
    }
}
二分法:
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
            for(int i=0;i<matrix[0].length;i++){
                if(target>matrix[matrix.length-1][i]){
                    continue;
                }
                int right=matrix.length-1;
                int left=0;
                while(left<=right){
                    int mid=left+((right-left)>>1);
                    int res=matrix[mid][i];
                    if(res==target)
                    return true;
                    else if(res>target)
                    right=mid-1;
                    else 
                    left=mid+1;
                }                
            }
            return false;
    }
}